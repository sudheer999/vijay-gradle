/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface IssueApproverChainReqDao
{
	/** 
	 * Inserts a new row in the ISSUE_APPROVER_CHAIN_REQ table.
	 */
	public IssueApproverChainReqPk insert(IssueApproverChainReq dto) throws IssueApproverChainReqDaoException;

	/** 
	 * Updates a single row in the ISSUE_APPROVER_CHAIN_REQ table.
	 */
	public void update(IssueApproverChainReqPk pk, IssueApproverChainReq dto) throws IssueApproverChainReqDaoException;

	/** 
	 * Deletes a single row in the ISSUE_APPROVER_CHAIN_REQ table.
	 */
	public void delete(IssueApproverChainReqPk pk) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns the rows from the ISSUE_APPROVER_CHAIN_REQ table that matches the specified primary-key value.
	 */
	public IssueApproverChainReq findByPrimaryKey(IssueApproverChainReqPk pk) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'ID = :id'.
	 */
	public IssueApproverChainReq findByPrimaryKey(int id) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria ''.
	 */
	public IssueApproverChainReq[] findAll() throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'ID = :id'.
	 */
	public IssueApproverChainReq[] findWhereIdEquals(int id) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'ESRQM_ID = :esrqmId'.
	 */
	public IssueApproverChainReq[] findWhereEsrqmIdEquals(int esrqmId) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'STATUS = :status'.
	 */
	public IssueApproverChainReq[] findWhereStatusEquals(String status) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'ASSIGNED_TO = :assignedTo'.
	 */
	public IssueApproverChainReq[] findWhereAssignedToEquals(int assignedTo) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'RAISED_BY = :raisedBy'.
	 */
	public IssueApproverChainReq[] findWhereRaisedByEquals(int raisedBy) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'SUMMARY = :summary'.
	 */
	public IssueApproverChainReq[] findWhereSummaryEquals(String summary) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'DESCRIPTION = :description'.
	 */
	public IssueApproverChainReq[] findWhereDescriptionEquals(String description) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'CREATEDATETIME = :createdatetime'.
	 */
	public IssueApproverChainReq[] findWhereCreatedatetimeEquals(Date createdatetime) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'SEQUENCE = :sequence'.
	 */
	public IssueApproverChainReq[] findWhereSequenceEquals(int sequence) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'MESSAGE_BODY = :messageBody'.
	 */
	public IssueApproverChainReq[] findWhereMessageBodyEquals(String messageBody) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the criteria 'ACTION_BY = :actionBy'.
	 */
	public IssueApproverChainReq[] findWhereActionByEquals(int actionBy) throws IssueApproverChainReqDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the specified arbitrary SQL statement
	 */
	public IssueApproverChainReq[] findByDynamicSelect(String sql, Object[] sqlParams) throws IssueApproverChainReqDaoException;

	/** 
	 * Returns all rows from the ISSUE_APPROVER_CHAIN_REQ table that match the specified arbitrary SQL statement
	 */
	public IssueApproverChainReq[] findByDynamicWhere(String sql, Object[] sqlParams) throws IssueApproverChainReqDaoException;

}
