/*
 * This source file was generated by FireStorm/DAO.
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * For more information please visit http://www.codefutures.com/products/firestorm
 */
package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.ExitRequest;
import com.dikshatech.portal.dto.ExitRequestPk;
import com.dikshatech.portal.exceptions.ExitRequestDaoException;

public interface ExitRequestDao {

	/**
	 * Inserts a new row in the EXIT_REQUEST table.
	 */
	public ExitRequestPk insert(ExitRequest dto) throws ExitRequestDaoException;

	/**
	 * Updates a single row in the EXIT_REQUEST table.
	 */
	public void update(ExitRequestPk pk, ExitRequest dto) throws ExitRequestDaoException;

	/**
	 * Deletes a single row in the EXIT_REQUEST table.
	 */
	public void delete(ExitRequestPk pk) throws ExitRequestDaoException;

	/**
	 * Returns the rows from the EXIT_REQUEST table that matches the specified primary-key value.
	 */
	public ExitRequest findByPrimaryKey(ExitRequestPk pk) throws ExitRequestDaoException;

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the criteria 'ID = :id'.
	 */
	public ExitRequest findByPrimaryKey(int id) throws ExitRequestDaoException;

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the criteria ''.
	 */
	public ExitRequest[] findAll() throws ExitRequestDaoException;

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the criteria 'EXIT_ID = :exitId'.
	 */
	public ExitRequest[] findWhereExitIdEquals(int exitId) throws ExitRequestDaoException;

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the criteria 'ACTION_BY = :actionBy'.
	 */
	public ExitRequest[] findWhereActionByEquals(int actionBy) throws ExitRequestDaoException;

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the criteria 'STATUS_ID = :statusId'.
	 */
	public ExitRequest[] findWhereStatusIdEquals(int statusId) throws ExitRequestDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the specified arbitrary SQL statement
	 */
	public ExitRequest[] findByDynamicSelect(String sql, Object[] sqlParams) throws ExitRequestDaoException;

	/**
	 * Returns all rows from the EXIT_REQUEST table that match the specified arbitrary SQL statement
	 */
	public ExitRequest[] findByDynamicWhere(String sql, Object[] sqlParams) throws ExitRequestDaoException;
}
