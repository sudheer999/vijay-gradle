/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ReimbursementFinancialDataDao
{
	/** 
	 * Inserts a new row in the REIMBURSEMENT_FINANCIAL_DATA table.
	 */
	public ReimbursementFinancialDataPk insert(ReimbursementFinancialData dto) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Updates a single row in the REIMBURSEMENT_FINANCIAL_DATA table.
	 */
	public void update(ReimbursementFinancialDataPk pk, ReimbursementFinancialData dto) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Deletes a single row in the REIMBURSEMENT_FINANCIAL_DATA table.
	 */
	public void delete(ReimbursementFinancialDataPk pk) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns the rows from the REIMBURSEMENT_FINANCIAL_DATA table that matches the specified primary-key value.
	 */
	public ReimbursementFinancialData findByPrimaryKey(ReimbursementFinancialDataPk pk) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'ID = :id'.
	 */
	public ReimbursementFinancialData findByPrimaryKey(int id) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria ''.
	 */
	public ReimbursementFinancialData[] findAll() throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'ID = :id'.
	 */
	public ReimbursementFinancialData[] findWhereIdEquals(int id) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'ESRMAP_ID = :esrmapId'.
	 */
	public ReimbursementFinancialData[] findWhereEsrmapIdEquals(int esrmapId) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'DATE_OF_OCCURRENCE = :dateOfOccurrence'.
	 */
	public ReimbursementFinancialData[] findWhereDateOfOccurrenceEquals(Date dateOfOccurrence) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'SUMMARY = :summary'.
	 */
	public ReimbursementFinancialData[] findWhereSummaryEquals(String summary) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'TYPE = :type'.
	 */
	public ReimbursementFinancialData[] findWhereTypeEquals(String type) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'AMOUNT = :amount'.
	 */
	public ReimbursementFinancialData[] findWhereAmountEquals(String amount) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'CURRENCY = :currency'.
	 */
	public ReimbursementFinancialData[] findWhereCurrencyEquals(String currency) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'RECEIPTS_AVAILABLE = :receiptsAvailable'.
	 */
	public ReimbursementFinancialData[] findWhereReceiptsAvailableEquals(String receiptsAvailable) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the criteria 'UPLOAD_RECEIPTS_ID = :uploadReceiptsId'.
	 */
	public ReimbursementFinancialData[] findWhereUploadReceiptsIdEquals(int uploadReceiptsId) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the specified arbitrary SQL statement
	 */
	public ReimbursementFinancialData[] findByDynamicSelect(String sql, Object[] sqlParams) throws ReimbursementFinancialDataDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_FINANCIAL_DATA table that match the specified arbitrary SQL statement
	 */
	public ReimbursementFinancialData[] findByDynamicWhere(String sql, Object[] sqlParams) throws ReimbursementFinancialDataDaoException;

}
