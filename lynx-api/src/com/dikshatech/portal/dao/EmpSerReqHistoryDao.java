/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface EmpSerReqHistoryDao
{
	/** 
	 * Inserts a new row in the EMP_SER_REQ_HISTORY table.
	 */
	public EmpSerReqHistoryPk insert(EmpSerReqHistory dto) throws EmpSerReqHistoryDaoException;

	/** 
	 * Updates a single row in the EMP_SER_REQ_HISTORY table.
	 */
	public void update(EmpSerReqHistoryPk pk, EmpSerReqHistory dto) throws EmpSerReqHistoryDaoException;

	/** 
	 * Deletes a single row in the EMP_SER_REQ_HISTORY table.
	 */
	public void delete(EmpSerReqHistoryPk pk) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns the rows from the EMP_SER_REQ_HISTORY table that matches the specified primary-key value.
	 */
	public EmpSerReqHistory findByPrimaryKey(EmpSerReqHistoryPk pk) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'ID = :id'.
	 */
	public EmpSerReqHistory findByPrimaryKey(int id) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria ''.
	 */
	public EmpSerReqHistory[] findAll() throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'ID = :id'.
	 */
	public EmpSerReqHistory[] findWhereIdEquals(long id) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'ESR_MAP_ID = :esrMapId'.
	 */
	public EmpSerReqHistory[] findWhereEsrMapIdEquals(int esrMapId) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'ACTION_ON = :actionOn'.
	 */
	public EmpSerReqHistory[] findWhereActionOnEquals(Date actionOn) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'ASSIGNED_TO = :assignedTo'.
	 */
	public EmpSerReqHistory[] findWhereAssignedToEquals(int assignedTo) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'ASSIGNED_BY = :assignedBy'.
	 */
	public EmpSerReqHistory[] findWhereAssignedByEquals(int assignedBy) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the criteria 'COMMENTS = :comments'.
	 */
	public EmpSerReqHistory[] findWhereCommentsEquals(String comments) throws EmpSerReqHistoryDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the specified arbitrary SQL statement
	 */
	public EmpSerReqHistory[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpSerReqHistoryDaoException;

	/** 
	 * Returns all rows from the EMP_SER_REQ_HISTORY table that match the specified arbitrary SQL statement
	 */
	public EmpSerReqHistory[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpSerReqHistoryDaoException;

	public EmpSerReqHistory findWhereEsrMapIdEqualsMax(int esrMapId) throws EmpSerReqHistoryDaoException;

}
