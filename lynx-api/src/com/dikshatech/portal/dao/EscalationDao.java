/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface EscalationDao
{
	/** 
	 * Inserts a new row in the ESCALATION table.
	 */
	public EscalationPk insert(Escalation dto) throws EscalationDaoException;

	/** 
	 * Updates a single row in the ESCALATION table.
	 */
	public void update(EscalationPk pk, Escalation dto) throws EscalationDaoException;

	/** 
	 * Deletes a single row in the ESCALATION table.
	 */
	public void delete(EscalationPk pk) throws EscalationDaoException;

	/** 
	 * Returns the rows from the ESCALATION table that matches the specified primary-key value.
	 */
	public Escalation findByPrimaryKey(EscalationPk pk) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'ID = :id'.
	 */
	public Escalation findByPrimaryKey(int id) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria ''.
	 */
	public Escalation[] findAll() throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'ID = :id'.
	 */
	public Escalation[] findWhereIdEquals(int id) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'PC_ID = :pcId'.
	 */
	public Escalation[] findWherePcIdEquals(int pcId) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'DUE_DAYS = :dueDays'.
	 */
	public Escalation[] findWhereDueDaysEquals(int dueDays) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'LEVEL_ID = :levelId'.
	 */
	public Escalation[] findWhereLevelIdEquals(int levelId) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'USERS_ID = :usersId'.
	 */
	public Escalation[] findWhereUsersIdEquals(String usersId) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'ESCAL_TO = :escalTo'.
	 */
	public Escalation[] findWhereEscalToEquals(String escalTo) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the criteria 'ESCAL_TYPE = :escalType'.
	 */
	public Escalation[] findWhereEscalTypeEquals(String escalType) throws EscalationDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ESCALATION table that match the specified arbitrary SQL statement
	 */
	public Escalation[] findByDynamicSelect(String sql, Object[] sqlParams) throws EscalationDaoException;

	/** 
	 * Returns all rows from the ESCALATION table that match the specified arbitrary SQL statement
	 */
	public Escalation[] findByDynamicWhere(String sql, Object[] sqlParams) throws EscalationDaoException;

}
