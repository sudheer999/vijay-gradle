/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface TaxBenefitAcceptDao
{
	/** 
	 * Inserts a new row in the TAX_BENEFIT_ACCEPT table.
	 */
	public TaxBenefitAcceptPk insert(TaxBenefitAccept dto) throws TaxBenefitAcceptDaoException;

	/** 
	 * Updates a single row in the TAX_BENEFIT_ACCEPT table.
	 */
	public void update(TaxBenefitAcceptPk pk, TaxBenefitAccept dto) throws TaxBenefitAcceptDaoException;

	/** 
	 * Deletes a single row in the TAX_BENEFIT_ACCEPT table.
	 */
	public void delete(TaxBenefitAcceptPk pk) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns the rows from the TAX_BENEFIT_ACCEPT table that matches the specified primary-key value.
	 */
	public TaxBenefitAccept findByPrimaryKey(TaxBenefitAcceptPk pk) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'ID = :id'.
	 */
	public TaxBenefitAccept findByPrimaryKey(int id) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria ''.
	 */
	public TaxBenefitAccept[] findAll() throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'ID = :id'.
	 */
	public TaxBenefitAccept[] findWhereIdEquals(int id) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'USERID = :userid'.
	 */
	public TaxBenefitAccept[] findWhereUseridEquals(int userid) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'BENEFIT_ID = :benefitId'.
	 */
	public TaxBenefitAccept[] findWhereBenefitIdEquals(int benefitId) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'AMOUNT = :amount'.
	 */
	public TaxBenefitAccept[] findWhereAmountEquals(String amount) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'FINANCIAL_YEAR = :financialYear'.
	 */
	public TaxBenefitAccept[] findWhereFinancialYearEquals(String financialYear) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the criteria 'COMMENTS = :comments'.
	 */
	public TaxBenefitAccept[] findWhereCommentsEquals(String comments) throws TaxBenefitAcceptDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the specified arbitrary SQL statement
	 */
	public TaxBenefitAccept[] findByDynamicSelect(String sql, Object[] sqlParams) throws TaxBenefitAcceptDaoException;

	/** 
	 * Returns all rows from the TAX_BENEFIT_ACCEPT table that match the specified arbitrary SQL statement
	 */
	public TaxBenefitAccept[] findByDynamicWhere(String sql, Object[] sqlParams) throws TaxBenefitAcceptDaoException;

}
