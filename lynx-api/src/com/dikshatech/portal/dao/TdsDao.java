/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface TdsDao
{
	/** 
	 * Inserts a new row in the TDS table.
	 */
	public TdsPk insert(Tds dto) throws TdsDaoException;

	/** 
	 * Updates a single row in the TDS table.
	 */
	public void update(TdsPk pk, Tds dto) throws TdsDaoException;

	/** 
	 * Deletes a single row in the TDS table.
	 */
	public void delete(TdsPk pk) throws TdsDaoException;

	/** 
	 * Returns the rows from the TDS table that matches the specified primary-key value.
	 */
	public Tds findByPrimaryKey(TdsPk pk) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'ID = :id'.
	 */
	public Tds findByPrimaryKey(int id) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria ''.
	 */
	public Tds[] findAll() throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'USERID = :userid'.
	 */
	public Tds[] findByUsers(int userid) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'ID = :id'.
	 */
	public Tds[] findWhereIdEquals(int id) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'MONTH_ID = :monthId'.
	 */
	public Tds[] findWhereMonthIdEquals(String monthId) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'USERID = :userid'.
	 */
	public Tds[] findWhereUseridEquals(int userid) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'AMOUNT = :amount'.
	 */
	public Tds[] findWhereAmountEquals(String amount) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the criteria 'STATUS = :status'.
	 */
	public Tds[] findWhereStatusEquals(int status) throws TdsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TDS table that match the specified arbitrary SQL statement
	 */
	public Tds[] findByDynamicSelect(String sql, Object[] sqlParams) throws TdsDaoException;

	/** 
	 * Returns all rows from the TDS table that match the specified arbitrary SQL statement
	 */
	public Tds[] findByDynamicWhere(String sql, Object[] sqlParams) throws TdsDaoException;
	
	public Tds[] findByDynamicWhereTds(String sql, Object[] sqlParams) throws TdsDaoException;
	
	public Tds[] findByStatus(String sql, Object[] sqlParams)throws TdsDaoException;

}
