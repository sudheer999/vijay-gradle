/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ExitQuestionsDao
{
	/** 
	 * Inserts a new row in the EXIT_QUESTIONS table.
	 */
	public ExitQuestionsPk insert(ExitQuestions dto) throws ExitQuestionsDaoException;

	/** 
	 * Updates a single row in the EXIT_QUESTIONS table.
	 */
	public void update(ExitQuestionsPk pk, ExitQuestions dto) throws ExitQuestionsDaoException;

	/** 
	 * Deletes a single row in the EXIT_QUESTIONS table.
	 */
	public void delete(ExitQuestionsPk pk) throws ExitQuestionsDaoException;

	/** 
	 * Returns the rows from the EXIT_QUESTIONS table that matches the specified primary-key value.
	 */
	public ExitQuestions findByPrimaryKey(ExitQuestionsPk pk) throws ExitQuestionsDaoException;

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the criteria 'ID = :id'.
	 */
	public ExitQuestions findByPrimaryKey(int id) throws ExitQuestionsDaoException;

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the criteria ''.
	 */
	public ExitQuestions[] findAll() throws ExitQuestionsDaoException;

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the criteria 'ID = :id'.
	 */
	public ExitQuestions[] findWhereIdEquals(Integer id) throws ExitQuestionsDaoException;

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the criteria 'TYPE = :type'.
	 */
	public ExitQuestions[] findWhereTypeEquals(String type) throws ExitQuestionsDaoException;

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the criteria 'QUESTION = :question'.
	 */
	public ExitQuestions[] findWhereQuestionEquals(String question) throws ExitQuestionsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the specified arbitrary SQL statement
	 */
	public ExitQuestions[] findByDynamicSelect(String sql, Object[] sqlParams) throws ExitQuestionsDaoException;

	/** 
	 * Returns all rows from the EXIT_QUESTIONS table that match the specified arbitrary SQL statement
	 */
	public ExitQuestions[] findByDynamicWhere(String sql, Object[] sqlParams) throws ExitQuestionsDaoException;

}
