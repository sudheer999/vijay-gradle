/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface FbpDetailsDao
{
	/** 
	 * Inserts a new row in the FBP_DETAILS table.
	 */
	public FbpDetailsPk insert(FbpDetails dto) throws FbpDetailsDaoException;

	/** 
	 * Updates a single row in the FBP_DETAILS table.
	 */
	public void update(FbpDetailsPk pk, FbpDetails dto) throws FbpDetailsDaoException;

	/** 
	 * Deletes a single row in the FBP_DETAILS table.
	 */
	public void delete(FbpDetailsPk pk) throws FbpDetailsDaoException;

	/** 
	 * Returns the rows from the FBP_DETAILS table that matches the specified primary-key value.
	 */
	public FbpDetails findByPrimaryKey(FbpDetailsPk pk) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'ID = :id'.
	 */
	public FbpDetails findByPrimaryKey(int id) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria ''.
	 */
	public FbpDetails[] findAll() throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'FBP_ID = :fbpId'.
	 */
	public FbpDetails[] findByFbpReq(int fbpId) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'ID = :id'.
	 */
	public FbpDetails[] findWhereIdEquals(int id) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'FBP_ID = :fbpId'.
	 */
	public FbpDetails[] findWhereFbpIdEquals(int fbpId) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'FBP = :fbp'.
	 */
	public FbpDetails[] findWhereFbpEquals(String fbp) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'ELIGIBLE_AMT = :eligibleAmt'.
	 */
	public FbpDetails[] findWhereEligibleAmtEquals(String eligibleAmt) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'USED_AMT = :usedAmt'.
	 */
	public FbpDetails[] findWhereUsedAmtEquals(String usedAmt) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the criteria 'UNUSED_AMT = :unusedAmt'.
	 */
	public FbpDetails[] findWhereUnusedAmtEquals(String unusedAmt) throws FbpDetailsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the specified arbitrary SQL statement
	 */
	public FbpDetails[] findByDynamicSelect(String sql, Object[] sqlParams) throws FbpDetailsDaoException;

	/** 
	 * Returns all rows from the FBP_DETAILS table that match the specified arbitrary SQL statement
	 */
	public FbpDetails[] findByDynamicWhere(String sql, Object[] sqlParams) throws FbpDetailsDaoException;

	public FbpDetails[] findByFbpReq(String string, Object[] objects)throws FbpDetailsDaoException;
	
	
	

}