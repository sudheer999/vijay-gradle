/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface SalaryReconciliationHoldDao
{
	/** 
	 * Inserts a new row in the salary_reconciliation_hold table.
	 */
	public SalaryReconciliationHoldPk insert(SalaryReconciliationHold dto) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Updates a single row in the salary_reconciliation_hold table.
	 */
	public void update(SalaryReconciliationHoldPk pk, SalaryReconciliationHold dto) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Deletes a single row in the salary_reconciliation_hold table.
	 */
	public void delete(SalaryReconciliationHoldPk pk) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns the rows from the salary_reconciliation_hold table that matches the specified primary-key value.
	 */
	public SalaryReconciliationHold findByPrimaryKey(SalaryReconciliationHoldPk pk) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the criteria 'ID = :id'.
	 */
	public SalaryReconciliationHold findByPrimaryKey(int id) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the criteria ''.
	 */
	public SalaryReconciliationHold[] findAll() throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the criteria 'REP_ID = :repId'.
	 */
	public SalaryReconciliationHold[] findWhereRepIdEquals(int repId) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the criteria 'USER_ID = :userId'.
	 */
	public SalaryReconciliationHold[] findWhereUserIdEquals(int userId) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the criteria 'ESC_FROM = :escFrom'.
	 */
	public SalaryReconciliationHold[] findWhereEscFromEquals(int escFrom) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the specified arbitrary SQL statement
	 */
	public SalaryReconciliationHold[] findByDynamicSelect(String sql, Object[] sqlParams) throws SalaryReconciliationHoldDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation_hold table that match the specified arbitrary SQL statement
	 */
	public SalaryReconciliationHold[] findByDynamicWhere(String sql, Object[] sqlParams) throws SalaryReconciliationHoldDaoException;

}
