/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.ArrayList;
import java.util.Date;

import com.dikshatech.beans.SalaryReportBean;
import com.dikshatech.portal.dto.SalaryReconciliation;
import com.dikshatech.portal.dto.SalaryReconciliationPk;
import com.dikshatech.portal.dto.SalaryReconciliationReport;
import com.dikshatech.portal.exceptions.SalaryReconciliationDaoException;
import com.dikshatech.portal.exceptions.TdsDaoException;

public interface SalaryReconciliationDao
{
	/** 
	 * Inserts a new row in the salary_reconciliation table.
	 */
	public SalaryReconciliationPk insert(SalaryReconciliation dto) throws SalaryReconciliationDaoException;

	/** 
	 * Updates a single row in the salary_reconciliation table.
	 */
	public void update(SalaryReconciliationPk pk, SalaryReconciliation dto) throws SalaryReconciliationDaoException;

	/** 
	 * Deletes a single row in the salary_reconciliation table.
	 */
	public void delete(SalaryReconciliationPk pk) throws SalaryReconciliationDaoException;

	/** 
	 * Returns the rows from the salary_reconciliation table that matches the specified primary-key value.
	 */
	public SalaryReconciliation findByPrimaryKey(SalaryReconciliationPk pk) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'ID = :id'.
	 */
	public SalaryReconciliation findByPrimaryKey(Integer id) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria ''.
	 */
	public SalaryReconciliation[] findAll() throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'ESR_MAP_ID = :esrMapId'.
	 */
	public SalaryReconciliation[] findWhereEsrMapIdEquals(Integer esrMapId) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'MONTH = :month'.
	 */
	public SalaryReconciliation[] findWhereMonthEquals(Integer month) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'YEAR = :year'.
	 */
	public SalaryReconciliation[] findWhereYearEquals(Integer year) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'STATUS = :status'.
	 */
	public SalaryReconciliation[] findWhereStatusEquals(Integer status) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'CREATED_ON = :createdOn'.
	 */
	public SalaryReconciliation[] findWhereCreatedOnEquals(Date createdOn) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the criteria 'COMPLETED_ON = :completedOn'.
	 */
	public SalaryReconciliation[] findWhereCompletedOnEquals(Date completedOn) throws SalaryReconciliationDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the salary_reconciliation table that match the specified arbitrary SQL statement
	 */
	public SalaryReconciliation[] findByDynamicSelect(String sql, Object[] sqlParams) throws SalaryReconciliationDaoException;

	/** 
	 * Returns all rows from the salary_reconciliation table that match the specified arbitrary SQL statement
	 */
	public SalaryReconciliation[] findByDynamicWhere(String sql, Object[] sqlParams) throws SalaryReconciliationDaoException;
	
	public SalaryReportBean[] getConfirmedSalaryDetails(int sr_id, int flag);
	
	
	public SalaryReportBean[] getBankSalaryDetails(int sr_id,ArrayList<Integer> ssr_id,String flag);

	public SalaryReconciliation[] findSrId(String string, Object[] objects)throws SalaryReconciliationDaoException;

	

}
