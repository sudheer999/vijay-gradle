/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface FbpConfigDao
{
	/** 
	 * Inserts a new row in the FBP_CONFIG table.
	 */
	public FbpConfigPk insert(FbpConfig dto) throws FbpConfigDaoException;

	/** 
	 * Updates a single row in the FBP_CONFIG table.
	 */
	public void update(FbpConfigPk pk, FbpConfig dto) throws FbpConfigDaoException;

	/** 
	 * Deletes a single row in the FBP_CONFIG table.
	 */
	public void delete(FbpConfigPk pk) throws FbpConfigDaoException;

	/** 
	 * Returns the rows from the FBP_CONFIG table that matches the specified primary-key value.
	 */
	public FbpConfig findByPrimaryKey(FbpConfigPk pk) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'ID = :id'.
	 */
	public FbpConfig findByPrimaryKey(int id) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria ''.
	 */
	public FbpConfig[] findAll() throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'ID = :id'.
	 */
	public FbpConfig[] findWhereIdEquals(int id) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'LEVEL_ID = :levelId'.
	 */
	public FbpConfig[] findWhereLevelIdEquals(int levelId) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'LEVEL = :level'.
	 */
	public FbpConfig[] findWhereLevelEquals(String level) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'LTA = :lta'.
	 */
	public FbpConfig[] findWhereLtaEquals(String lta) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'TPA = :tpa'.
	 */
	public FbpConfig[] findWhereTpaEquals(String tpa) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'MA = :ma'.
	 */
	public FbpConfig[] findWhereMaEquals(String ma) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'CEA = :cea'.
	 */
	public FbpConfig[] findWhereCeaEquals(String cea) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'MV = :mv'.
	 */
	public FbpConfig[] findWhereMvEquals(String mv) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'TRA = :tra'.
	 */
	public FbpConfig[] findWhereTraEquals(String tra) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the criteria 'OA = :oa'.
	 */
	public FbpConfig[] findWhereOaEquals(String oa) throws FbpConfigDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the specified arbitrary SQL statement
	 */
	public FbpConfig[] findByDynamicSelect(String sql, Object[] sqlParams) throws FbpConfigDaoException;

	/** 
	 * Returns all rows from the FBP_CONFIG table that match the specified arbitrary SQL statement
	 */
	public FbpConfig[] findByDynamicWhere(String sql, Object[] sqlParams) throws FbpConfigDaoException;

}
