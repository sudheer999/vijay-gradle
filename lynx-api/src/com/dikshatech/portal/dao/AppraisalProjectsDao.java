/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.HashMap;

import com.dikshatech.portal.dto.AppraisalProjects;
import com.dikshatech.portal.dto.AppraisalProjectsPk;
import com.dikshatech.portal.exceptions.AppraisalProjectsDaoException;

public interface AppraisalProjectsDao
{
	/** 
	 * Inserts a new row in the APPRAISAL_PROJECTS table.
	 */
	public AppraisalProjectsPk insert(AppraisalProjects dto) throws AppraisalProjectsDaoException;

	/** 
	 * Updates a single row in the APPRAISAL_PROJECTS table.
	 */
	public void update(AppraisalProjectsPk pk, AppraisalProjects dto) throws AppraisalProjectsDaoException;

	/** 
	 * Deletes a single row in the APPRAISAL_PROJECTS table.
	 */
	public void delete(AppraisalProjectsPk pk) throws AppraisalProjectsDaoException;

	/** 
	 * Returns the rows from the APPRAISAL_PROJECTS table that matches the specified primary-key value.
	 */
	public AppraisalProjects findByPrimaryKey(AppraisalProjectsPk pk) throws AppraisalProjectsDaoException;

	/** 
	 * Returns all rows from the APPRAISAL_PROJECTS table that match the criteria 'ID = :id'.
	 */
	public AppraisalProjects findByPrimaryKey(int id) throws AppraisalProjectsDaoException;

	/** 
	 * Returns all rows from the APPRAISAL_PROJECTS table that match the criteria ''.
	 */
	public AppraisalProjects[] findAll() throws AppraisalProjectsDaoException;

	/** 
	 * Returns all rows from the APPRAISAL_PROJECTS table that match the criteria 'APPRAISAL_ID = :appraisalId'.
	 */
	public AppraisalProjects[] findWhereAppraisalIdEquals(Integer appraisalId) throws AppraisalProjectsDaoException;

	public HashMap<String, String>[] findAppraisalProjects(Integer appraisalId) throws AppraisalProjectsDaoException;
	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the APPRAISAL_PROJECTS table that match the specified arbitrary SQL statement
	 */
	public AppraisalProjects[] findByDynamicSelect(String sql, Object[] sqlParams) throws AppraisalProjectsDaoException;

	/** 
	 * Returns all rows from the APPRAISAL_PROJECTS table that match the specified arbitrary SQL statement
	 */
	public AppraisalProjects[] findByDynamicWhere(String sql, Object[] sqlParams) throws AppraisalProjectsDaoException;

}
