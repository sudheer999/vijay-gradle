/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface CurrencyTypeDao
{
	/** 
	 * Inserts a new row in the CURRENCY_TYPE table.
	 */
	public CurrencyTypePk insert(CurrencyType dto) throws CurrencyTypeDaoException;

	/** 
	 * Updates a single row in the CURRENCY_TYPE table.
	 */
	public void update(CurrencyTypePk pk, CurrencyType dto) throws CurrencyTypeDaoException;

	/** 
	 * Deletes a single row in the CURRENCY_TYPE table.
	 */
	public void delete(CurrencyTypePk pk) throws CurrencyTypeDaoException;

	/** 
	 * Returns the rows from the CURRENCY_TYPE table that matches the specified primary-key value.
	 */
	public CurrencyType findByPrimaryKey(CurrencyTypePk pk) throws CurrencyTypeDaoException;

	/** 
	 * Returns all rows from the CURRENCY_TYPE table that match the criteria 'ID = :id'.
	 */
	public CurrencyType findByPrimaryKey(int id) throws CurrencyTypeDaoException;

	/** 
	 * Returns all rows from the CURRENCY_TYPE table that match the criteria ''.
	 */
	public CurrencyType[] findAll() throws CurrencyTypeDaoException;

	/** 
	 * Returns all rows from the CURRENCY_TYPE table that match the criteria 'ID = :id'.
	 */
	public CurrencyType[] findWhereIdEquals(int id) throws CurrencyTypeDaoException;

	/** 
	 * Returns all rows from the CURRENCY_TYPE table that match the criteria 'TYPE = :type'.
	 */
	public CurrencyType[] findWhereTypeEquals(String type) throws CurrencyTypeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the CURRENCY_TYPE table that match the specified arbitrary SQL statement
	 */
	public CurrencyType[] findByDynamicSelect(String sql, Object[] sqlParams) throws CurrencyTypeDaoException;

	/** 
	 * Returns all rows from the CURRENCY_TYPE table that match the specified arbitrary SQL statement
	 */
	public CurrencyType[] findByDynamicWhere(String sql, Object[] sqlParams) throws CurrencyTypeDaoException;

}
