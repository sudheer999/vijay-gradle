/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface SkillSetDao
{
	/** 
	 * Inserts a new row in the SKILL_SET table.
	 */
	public SkillSetPk insert(SkillSet dto) throws SkillSetDaoException;

	/** 
	 * Updates a single row in the SKILL_SET table.
	 */
	public void update(SkillSetPk pk, SkillSet dto) throws SkillSetDaoException;

	/** 
	 * Deletes a single row in the SKILL_SET table.
	 */
	public void delete(SkillSetPk pk) throws SkillSetDaoException;

	/** 
	 * Returns the rows from the SKILL_SET table that matches the specified primary-key value.
	 */
	public SkillSet findByPrimaryKey(SkillSetPk pk) throws SkillSetDaoException;

	/** 
	 * Returns all rows from the SKILL_SET table that match the criteria 'ID = :id'.
	 */
	public SkillSet findByPrimaryKey(int id) throws SkillSetDaoException;

	/** 
	 * Returns all rows from the SKILL_SET table that match the criteria ''.
	 */
	public SkillSet[] findAll() throws SkillSetDaoException;

	/** 
	 * Returns all rows from the SKILL_SET table that match the criteria 'ID = :id'.
	 */
	public SkillSet[] findWhereIdEquals(int id) throws SkillSetDaoException;

	/** 
	 * Returns all rows from the SKILL_SET table that match the criteria 'SKILLNAME = :skillname'.
	 */
	public SkillSet[] findWhereSkillnameEquals(String skillname) throws SkillSetDaoException;

	/** 
	 * Returns all rows from the SKILL_SET table that match the criteria 'PARENT_ID = :parentId'.
	 */
	public SkillSet[] findWhereParentIdEquals(int parentId) throws SkillSetDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SKILL_SET table that match the specified arbitrary SQL statement
	 */
	public SkillSet[] findByDynamicSelect(String sql, Object[] sqlParams) throws SkillSetDaoException;

	/** 
	 * Returns all rows from the SKILL_SET table that match the specified arbitrary SQL statement
	 */
	public SkillSet[] findByDynamicWhere(String sql, Object[] sqlParams) throws SkillSetDaoException;

}
