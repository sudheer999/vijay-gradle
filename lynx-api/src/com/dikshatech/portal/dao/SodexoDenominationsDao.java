/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.SodexoDenominations;
import com.dikshatech.portal.dto.SodexoDenominationsPk;
import com.dikshatech.portal.exceptions.SodexoDenominationsDaoException;

public interface SodexoDenominationsDao
{
	/** 
	 * Inserts a new row in the SODEXO_DENOMINATIONS table.
	 */
	public SodexoDenominationsPk insert(SodexoDenominations dto) throws SodexoDenominationsDaoException;

	/** 
	 * Updates a single row in the SODEXO_DENOMINATIONS table.
	 */
	public void update(SodexoDenominationsPk pk, SodexoDenominations dto) throws SodexoDenominationsDaoException;

	/** 
	 * Deletes a single row in the SODEXO_DENOMINATIONS table.
	 */
	public void delete(SodexoDenominationsPk pk) throws SodexoDenominationsDaoException;

	/** 
	 * Returns the rows from the SODEXO_DENOMINATIONS table that matches the specified primary-key value.
	 */
	public SodexoDenominations findByPrimaryKey(SodexoDenominationsPk pk) throws SodexoDenominationsDaoException;

	/** 
	 * Returns all rows from the SODEXO_DENOMINATIONS table that match the criteria 'ID = :id'.
	 */
	public SodexoDenominations findByPrimaryKey(int id) throws SodexoDenominationsDaoException;

	/** 
	 * Returns all rows from the SODEXO_DENOMINATIONS table that match the criteria ''.
	 */
	public SodexoDenominations[] findAll() throws SodexoDenominationsDaoException;

	/** 
	 * Returns all rows from the SODEXO_DENOMINATIONS table that match the criteria 'ID = :id'.
	 */
	public SodexoDenominations[] findWhereIdEquals(int id) throws SodexoDenominationsDaoException;

	/** 
	 * Returns all rows from the SODEXO_DENOMINATIONS table that match the criteria 'DENOMS = :denoms'.
	 */
	public SodexoDenominations[] findWhereDenomsEquals(int denoms) throws SodexoDenominationsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SODEXO_DENOMINATIONS table that match the specified arbitrary SQL statement
	 */
	public SodexoDenominations[] findByDynamicSelect(String sql, Object[] sqlParams) throws SodexoDenominationsDaoException;

	/** 
	 * Returns all rows from the SODEXO_DENOMINATIONS table that match the specified arbitrary SQL statement
	 */
	public SodexoDenominations[] findByDynamicWhere(String sql, Object[] sqlParams) throws SodexoDenominationsDaoException;

}
