/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface UsStateDao
{
	/** 
	 * Inserts a new row in the US_STATE table.
	 */
	public UsStatePk insert(UsState dto) throws UsStateDaoException;

	/** 
	 * Updates a single row in the US_STATE table.
	 */
	public void update(UsStatePk pk, UsState dto) throws UsStateDaoException;

	/** 
	 * Deletes a single row in the US_STATE table.
	 */
	public void delete(UsStatePk pk) throws UsStateDaoException;

	/** 
	 * Returns the rows from the US_STATE table that matches the specified primary-key value.
	 */
	public UsState findByPrimaryKey(UsStatePk pk) throws UsStateDaoException;

	/** 
	 * Returns all rows from the US_STATE table that match the criteria 'ID = :id'.
	 */
	public UsState findByPrimaryKey(int id) throws UsStateDaoException;

	/** 
	 * Returns all rows from the US_STATE table that match the criteria ''.
	 */
	public UsState[] findAll() throws UsStateDaoException;

	/** 
	 * Returns all rows from the US_STATE table that match the criteria 'ID = :id'.
	 */
	public UsState[] findWhereIdEquals(int id) throws UsStateDaoException;

	/** 
	 * Returns all rows from the US_STATE table that match the criteria 'STATE = :state'.
	 */
	public UsState[] findWhereStateEquals(String state) throws UsStateDaoException;

	/** 
	 * Returns all rows from the US_STATE table that match the criteria 'STATE_ABBR = :stateAbbr'.
	 */
	public UsState[] findWhereStateAbbrEquals(String stateAbbr) throws UsStateDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the US_STATE table that match the specified arbitrary SQL statement
	 */
	public UsState[] findByDynamicSelect(String sql, Object[] sqlParams) throws UsStateDaoException;

	/** 
	 * Returns all rows from the US_STATE table that match the specified arbitrary SQL statement
	 */
	public UsState[] findByDynamicWhere(String sql, Object[] sqlParams) throws UsStateDaoException;

}
