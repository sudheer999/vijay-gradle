/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface NomineeInfoDao
{
	/** 
	 * Inserts a new row in the NOMINEE_INFO table.
	 */
	public NomineeInfoPk insert(NomineeInfo dto) throws NomineeInfoDaoException;

	/** 
	 * Updates a single row in the NOMINEE_INFO table.
	 */
	public void update(NomineeInfoPk pk, NomineeInfo dto) throws NomineeInfoDaoException;

	/** 
	 * Deletes a single row in the NOMINEE_INFO table.
	 */
	public void delete(NomineeInfoPk pk) throws NomineeInfoDaoException;

	/** 
	 * Returns the rows from the NOMINEE_INFO table that matches the specified primary-key value.
	 */
	public NomineeInfo findByPrimaryKey(NomineeInfoPk pk) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'ID = :id'.
	 */
	public NomineeInfo findByPrimaryKey(int id) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria ''.
	 */
	public NomineeInfo[] findAll() throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'ID = :id'.
	 */
	public NomineeInfo[] findWhereIdEquals(int id) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'NAME = :name'.
	 */
	public NomineeInfo[] findWhereNameEquals(String name) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'CONTACT_NO = :contactNo'.
	 */
	public NomineeInfo[] findWhereContactNoEquals(String contactNo) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'NUM_DEPENDENTS = :numDependents'.
	 */
	public NomineeInfo[] findWhereNumDependentsEquals(short numDependents) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'DEP_NAME = :depName'.
	 */
	public NomineeInfo[] findWhereDepNameEquals(String depName) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the criteria 'RELATIONSHIP = :relationship'.
	 */
	public NomineeInfo[] findWhereRelationshipEquals(String relationship) throws NomineeInfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the specified arbitrary SQL statement
	 */
	public NomineeInfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws NomineeInfoDaoException;

	/** 
	 * Returns all rows from the NOMINEE_INFO table that match the specified arbitrary SQL statement
	 */
	public NomineeInfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws NomineeInfoDaoException;

}
