/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ExperienceInfoDao
{
	/** 
	 * Inserts a new row in the EXPERIENCE_INFO table.
	 */
	public ExperienceInfoPk insert(ExperienceInfo dto) throws ExperienceInfoDaoException;

	/** 
	 * Updates a single row in the EXPERIENCE_INFO table.
	 */
	public void update(ExperienceInfoPk pk, ExperienceInfo dto) throws ExperienceInfoDaoException;

	/** 
	 * Deletes a single row in the EXPERIENCE_INFO table.
	 */
	public void delete(ExperienceInfoPk pk) throws ExperienceInfoDaoException;

	/** 
	 * Returns the rows from the EXPERIENCE_INFO table that matches the specified primary-key value.
	 */
	public ExperienceInfo findByPrimaryKey(ExperienceInfoPk pk) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'ID = :id'.
	 */
	public ExperienceInfo findByPrimaryKey(int id) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria ''.
	 */
	public ExperienceInfo[] findAll() throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'ID = :id'.
	 */
	public ExperienceInfo[] findWhereIdEquals(int id) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'COMPANY = :company'.
	 */
	public ExperienceInfo[] findWhereCompanyEquals(String company) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'CURRENT_EMP = :currentEmp'.
	 */
	public ExperienceInfo[] findWhereCurrentEmpEquals(short currentEmp) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'DATE_JOINING = :dateJoining'.
	 */
	public ExperienceInfo[] findWhereDateJoiningEquals(Date dateJoining) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'DATE_RELIEVING = :dateRelieving'.
	 */
	public ExperienceInfo[] findWhereDateRelievingEquals(Date dateRelieving) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'JOINING_DESIGNATION = :joiningDesignation'.
	 */
	public ExperienceInfo[] findWhereJoiningDesignationEquals(String joiningDesignation) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'LEAVING_DESIGNATION = :leavingDesignation'.
	 */
	public ExperienceInfo[] findWhereLeavingDesignationEquals(String leavingDesignation) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'RPT_MGR_NAME = :rptMgrName'.
	 */
	public ExperienceInfo[] findWhereRptMgrNameEquals(String rptMgrName) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'HR_NAME = :hrName'.
	 */
	public ExperienceInfo[] findWhereHrNameEquals(String hrName) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'EMPLOYMENT_TYPE = :employmentType'.
	 */
	public ExperienceInfo[] findWhereEmploymentTypeEquals(String employmentType) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'EMP_CODE = :empCode'.
	 */
	public ExperienceInfo[] findWhereEmpCodeEquals(String empCode) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'LEAVING_REASON = :leavingReason'.
	 */
	public ExperienceInfo[] findWhereLeavingReasonEquals(String leavingReason) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'CANDIDATE_ID = :candidateId'.
	 */
	public ExperienceInfo[] findWhereCandidateIdEquals(int candidateId) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the criteria 'USER_ID = :userId'.
	 */
	public ExperienceInfo[] findWhereUserIdEquals(int userId) throws ExperienceInfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the specified arbitrary SQL statement
	 */
	public ExperienceInfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws ExperienceInfoDaoException;

	/** 
	 * Returns all rows from the EXPERIENCE_INFO table that match the specified arbitrary SQL statement
	 */
	public ExperienceInfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws ExperienceInfoDaoException;

}
