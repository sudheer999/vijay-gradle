/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface AccessibilityLevelDao
{
	/**
	 * Inserts a new row in the ACCESSIBILITY_LEVEL table.
	 */
	public AccessibilityLevelPk insert(AccessibilityLevel dto) throws AccessibilityLevelDaoException;

	/**
	 * Updates a single row in the ACCESSIBILITY_LEVEL table.
	 */
	public void update(AccessibilityLevelPk pk, AccessibilityLevel dto) throws AccessibilityLevelDaoException;

	/**
	 * Deletes a single row in the ACCESSIBILITY_LEVEL table.
	 */
	public void delete(AccessibilityLevelPk pk) throws AccessibilityLevelDaoException;

	/**
	 * Returns the rows from the ACCESSIBILITY_LEVEL table that matches the specified primary-key
	 * value.
	 */
	public AccessibilityLevel findByPrimaryKey(AccessibilityLevelPk pk) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'ID = :id'.
	 */
	public AccessibilityLevel findByPrimaryKey(int id) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria ''.
	 */
	public AccessibilityLevel[ ] findAll() throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'ID = :id'.
	 */
	public AccessibilityLevel[ ] findWhereIdEquals(int id) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'COMPANY_ID =
	 * :companyId'.
	 */
	public AccessibilityLevel[ ] findWhereCompanyIdEquals(String companyId) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'REGION_ID =
	 * :regionId'.
	 */
	public AccessibilityLevel[ ] findWhereRegionIdEquals(String regionId) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'DIVISION_ID =
	 * :divisionId'.
	 */
	public AccessibilityLevel[ ] findWhereDivisionIdEquals(String divisionId) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'DEPARTMENT_ID =
	 * :departmentId'.
	 */
	public AccessibilityLevel[ ] findWhereDepartmentIdEquals(String departmentId) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'USER_IDS =
	 * :userIds'.
	 */
	public AccessibilityLevel[ ] findWhereUserIdsEquals(String userIds) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'SAVE = :save'.
	 */
	public AccessibilityLevel[ ] findWhereSaveEquals(short save) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'VIEW = :view'.
	 */
	public AccessibilityLevel[ ] findWhereViewEquals(short view) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'REMOVE =
	 * :remove'.
	 */
	public AccessibilityLevel[ ] findWhereRemoveEquals(short remove) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'MODIFY =
	 * :modify'.
	 */
	public AccessibilityLevel[ ] findWhereModifyEquals(short modify) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'APPROVE =
	 * :approve'.
	 */
	public AccessibilityLevel[ ] findWhereApproveEquals(short approve) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'REJECT =
	 * :reject'.
	 */
	public AccessibilityLevel[ ] findWhereRejectEquals(short reject) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'ENABLE =
	 * :enable'.
	 */
	public AccessibilityLevel[ ] findWhereEnableEquals(short enable) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'DISABLE =
	 * :disable'.
	 */
	public AccessibilityLevel[ ] findWhereDisableEquals(short disable) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'RESEND_OFFER =
	 * :resendOffer'.
	 */
	public AccessibilityLevel[ ] findWhereResendOfferEquals(short resendOffer) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'GEN_OFFER =
	 * :genOffer'.
	 */
	public AccessibilityLevel[ ] findWhereGenOfferEquals(short genOffer) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'MARK_AS_EMP =
	 * :markAsEmp'.
	 */
	public AccessibilityLevel[ ] findWhereMarkAsEmpEquals(short markAsEmp) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'ASSIGN =
	 * :assign'.
	 */
	public AccessibilityLevel[ ] findWhereAssignEquals(short assign) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the criteria 'HOLD = :hold'.
	 */
	public AccessibilityLevel[ ] findWhereHoldEquals(short hold) throws AccessibilityLevelDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the specified arbitrary SQL
	 * statement
	 */
	public AccessibilityLevel[ ] findByDynamicSelect(String sql, Object[ ] sqlParams) throws AccessibilityLevelDaoException;

	/**
	 * Returns all rows from the ACCESSIBILITY_LEVEL table that match the specified arbitrary SQL
	 * statement
	 */
	public AccessibilityLevel[ ] findByDynamicWhere(String sql, Object[ ] sqlParams) throws AccessibilityLevelDaoException;

}
