/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.text.ParseException;
import java.util.Date;
import java.util.List;

import com.dikshatech.portal.dto.DepPerdiemReport;
import com.dikshatech.portal.dto.PerdiemMasterData;
import com.dikshatech.portal.dto.PerdiemMasterDataPk;
import com.dikshatech.portal.exceptions.PerdiemMasterDataDaoException;

public interface PerdiemMasterDataDao {
	/**
	 * Inserts a new row in the PERDIEM_MASTER_DATA table.
	 */
	public PerdiemMasterDataPk insert(PerdiemMasterData dto)
			throws PerdiemMasterDataDaoException;

	/**
	 * Updates a single row in the PERDIEM_MASTER_DATA table.
	 */
	public void update(PerdiemMasterDataPk pk, PerdiemMasterData dto)
			throws PerdiemMasterDataDaoException;

	/**
	 * Deletes a single row in the PERDIEM_MASTER_DATA table.
	 */
	public void delete(PerdiemMasterDataPk pk)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns the rows from the PERDIEM_MASTER_DATA table that matches the
	 * specified primary-key value.
	 */
	public PerdiemMasterData findByPrimaryKey(PerdiemMasterDataPk pk)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'ID = :id'.
	 */
	public PerdiemMasterData findByPrimaryKey(int id)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria ''.
	 */
	public PerdiemMasterData[] findAll() throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'ID = :id'.
	 */
	public PerdiemMasterData[] findWhereIdEquals(int id)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'USER_ID = :userId'.
	 */
	public PerdiemMasterData[] findWhereUserIdEquals(int userId)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'PERDIEM = :perdiem'.
	 */
	public PerdiemMasterData[] findWherePerdiemEquals(String perdiem)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'PERDIEM_FROM = :perdiemFrom'.
	 */
	public PerdiemMasterData[] findWherePerdiemFromEquals(Date perdiemFrom)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'PERDIEM_TO = :perdiemTo'.
	 */
	public PerdiemMasterData[] findWherePerdiemToEquals(Date perdiemTo)
			throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * criteria 'CURRENCY_TYPE = :currencyType'.
	 */
	public PerdiemMasterData[] findWhereCurrencyTypeEquals(String currencyType)
			throws PerdiemMasterDataDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * specified arbitrary SQL statement
	 */
	public PerdiemMasterData[] findByDynamicSelect(String sql,
			Object[] sqlParams) throws PerdiemMasterDataDaoException;

	/**
	 * Returns all rows from the PERDIEM_MASTER_DATA table that match the
	 * specified arbitrary SQL statement
	 */
	public PerdiemMasterData[] findByDynamicWhere(String sql, Object[] sqlParams)
			throws PerdiemMasterDataDaoException;


	public List<DepPerdiemReport> getPerdiemCurrencyMaps(Date start, Date end) throws PerdiemMasterDataDaoException, ParseException;
}
