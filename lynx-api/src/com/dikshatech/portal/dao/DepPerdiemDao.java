/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import java.util.List;

import com.dikshatech.portal.dto.DepPerdiem;
import com.dikshatech.portal.dto.DepPerdiemPk;
import com.dikshatech.portal.exceptions.DepPerdiemDaoException;

public interface DepPerdiemDao
{
	/** 
	 * Inserts a new row in the DEP_PERDIEM table.
	 */
	public DepPerdiemPk insert(DepPerdiem dto) throws DepPerdiemDaoException;

	/** 
	 * Updates a single row in the DEP_PERDIEM table.
	 */
	public void update(DepPerdiemPk pk, DepPerdiem dto) throws DepPerdiemDaoException;

	/** 
	 * Deletes a single row in the DEP_PERDIEM table.
	 */
	public void delete(DepPerdiemPk pk) throws DepPerdiemDaoException;

	/** 
	 * Returns the rows from the DEP_PERDIEM table that matches the specified primary-key value.
	 */
	public DepPerdiem findByPrimaryKey(DepPerdiemPk pk) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'ID = :id'.
	 */
	public DepPerdiem findByPrimaryKey(int id) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria ''.
	 */
	public DepPerdiem[] findAll() throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'ID = :id'.
	 */
	public DepPerdiem[] findWhereIdEquals(int id) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'ESR_MAP_ID = :esrMapId'.
	 */
	public DepPerdiem findWhereEsrMapIdEquals(int esrMapId) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'TERM = :term'.
	 */
	public DepPerdiem[] findWhereTermEquals(String term) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'MONTH = :month'.
	 */
	public DepPerdiem[] findWhereMonthEquals(String month) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'YEAR = :year'.
	 */
	public DepPerdiem[] findWhereYearEquals(int year) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'SUBMITTED_ON = :submittedOn'.
	 */
	public DepPerdiem[] findWhereSubmittedOnEquals(Date submittedOn) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'COMPLETED_ON = :completedOn'.
	 */
	public DepPerdiem[] findWhereCompletedOnEquals(Date completedOn) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'STATUS = :status'.
	 */
	public DepPerdiem[] findWhereStatusEquals(String status) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the criteria 'HTML_STATUS = :htmlStatus'.
	 */
	public DepPerdiem[] findWhereHtmlStatusEquals(String htmlStatus) throws DepPerdiemDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the specified arbitrary SQL statement
	 */
	public DepPerdiem[] findByDynamicSelect(String sql, Object[] sqlParams) throws DepPerdiemDaoException;

	/** 
	 * Returns all rows from the DEP_PERDIEM table that match the specified arbitrary SQL statement
	 */
	public DepPerdiem[] findByDynamicWhere(String sql, Object[] sqlParams) throws DepPerdiemDaoException;
	
	public List<DepPerdiem> findByDynamicListWhere(String sql, Object[] sqlParams) throws DepPerdiemDaoException;


	public int findMaxId() throws DepPerdiemDaoException;
	
	public int update(String sql) throws DepPerdiemDaoException;
}
