/*
 * This source file was generated by FireStorm/DAO.
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * For more information please visit http://www.codefutures.com/products/firestorm
 */
package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.ExitDeclaration;
import com.dikshatech.portal.dto.ExitDeclarationPk;
import com.dikshatech.portal.exceptions.ExitDeclarationDaoException;

public interface ExitDeclarationDao {

	/**
	 * Inserts a new row in the exit_declaration table.
	 */
	public ExitDeclarationPk insert(ExitDeclaration dto) throws ExitDeclarationDaoException;

	/**
	 * Updates a single row in the exit_declaration table.
	 */
	public void update(ExitDeclarationPk pk, ExitDeclaration dto) throws ExitDeclarationDaoException;

	/**
	 * Deletes a single row in the exit_declaration table.
	 */
	public void delete(ExitDeclarationPk pk) throws ExitDeclarationDaoException;

	/**
	 * Returns the rows from the exit_declaration table that matches the specified primary-key value.
	 */
	public ExitDeclaration findByPrimaryKey(ExitDeclarationPk pk) throws ExitDeclarationDaoException;

	/**
	 * Returns all rows from the exit_declaration table that match the criteria 'ID = :id'.
	 */
	public ExitDeclaration findByPrimaryKey(int id) throws ExitDeclarationDaoException;

	/**
	 * Returns all rows from the exit_declaration table that match the criteria 'EXIT_ID = :exitId'.
	 */
	public ExitDeclaration findWhereExitIdEquals(Integer exitId) throws ExitDeclarationDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the exit_declaration table that match the specified arbitrary SQL statement
	 */
	public ExitDeclaration[] findByDynamicSelect(String sql, Object[] sqlParams) throws ExitDeclarationDaoException;

	/**
	 * Returns all rows from the exit_declaration table that match the specified arbitrary SQL statement
	 */
	public ExitDeclaration[] findByDynamicWhere(String sql, Object[] sqlParams) throws ExitDeclarationDaoException;
}
