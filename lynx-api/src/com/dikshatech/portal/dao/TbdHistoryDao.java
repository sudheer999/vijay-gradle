/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface TbdHistoryDao
{
	/** 
	 * Inserts a new row in the TBD_HISTORY table.
	 */
	public TbdHistoryPk insert(TbdHistory dto) throws TbdHistoryDaoException;

	/** 
	 * Updates a single row in the TBD_HISTORY table.
	 */
	public void update(TbdHistoryPk pk, TbdHistory dto) throws TbdHistoryDaoException;

	/** 
	 * Deletes a single row in the TBD_HISTORY table.
	 */
	public void delete(TbdHistoryPk pk) throws TbdHistoryDaoException;

	/** 
	 * Returns the rows from the TBD_HISTORY table that matches the specified primary-key value.
	 */
	public TbdHistory findByPrimaryKey(TbdHistoryPk pk) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'ID = :id'.
	 */
	public TbdHistory findByPrimaryKey(int id) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria ''.
	 */
	public TbdHistory[] findAll() throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'ID = :id'.
	 */
	public TbdHistory[] findWhereIdEquals(int id) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'USERID = :userid'.
	 */
	public TbdHistory[] findWhereUseridEquals(int userid) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'BENEFIT_ID = :benefitId'.
	 */
	public TbdHistory[] findWhereBenefitIdEquals(int benefitId) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'AMOUNT = :amount'.
	 */
	public TbdHistory[] findWhereAmountEquals(String amount) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'FINANCIAL_YEAR = :financialYear'.
	 */
	public TbdHistory[] findWhereFinancialYearEquals(String financialYear) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'COMMENTS = :comments'.
	 */
	public TbdHistory[] findWhereCommentsEquals(String comments) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the criteria 'UPDATED_ON = :updatedOn'.
	 */
	public TbdHistory[] findWhereUpdatedOnEquals(Date updatedOn) throws TbdHistoryDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the specified arbitrary SQL statement
	 */
	public TbdHistory[] findByDynamicSelect(String sql, Object[] sqlParams) throws TbdHistoryDaoException;

	/** 
	 * Returns all rows from the TBD_HISTORY table that match the specified arbitrary SQL statement
	 */
	public TbdHistory[] findByDynamicWhere(String sql, Object[] sqlParams) throws TbdHistoryDaoException;

}
