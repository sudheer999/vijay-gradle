/*
 * This source file was generated by FireStorm/DAO.
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * For more information please visit http://www.codefutures.com/products/firestorm
 */
package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.ExitAdminNoc;
import com.dikshatech.portal.dto.ExitAdminNocPk;
import com.dikshatech.portal.exceptions.ExitAdminNocDaoException;

public interface ExitAdminNocDao {

	/**
	 * Inserts a new row in the EXIT_ADMIN_NOC table.
	 */
	public ExitAdminNocPk insert(ExitAdminNoc dto) throws ExitAdminNocDaoException;

	/**
	 * Updates a single row in the EXIT_ADMIN_NOC table.
	 */
	public void update(ExitAdminNocPk pk, ExitAdminNoc dto) throws ExitAdminNocDaoException;

	/**
	 * Deletes a single row in the EXIT_ADMIN_NOC table.
	 */
	public void delete(ExitAdminNocPk pk) throws ExitAdminNocDaoException;

	/**
	 * Returns the rows from the EXIT_ADMIN_NOC table that matches the specified primary-key value.
	 */
	public ExitAdminNoc findByPrimaryKey(ExitAdminNocPk pk) throws ExitAdminNocDaoException;

	/**
	 * Returns all rows from the EXIT_ADMIN_NOC table that match the criteria 'ID = :id'.
	 */
	public ExitAdminNoc findByPrimaryKey(int id) throws ExitAdminNocDaoException;

	/**
	 * Returns all rows from the EXIT_ADMIN_NOC table that match the criteria ''.
	 */
	public ExitAdminNoc[] findAll() throws ExitAdminNocDaoException;

	/**
	 * Returns all rows from the EXIT_ADMIN_NOC table that match the criteria 'EXIT_ID = :exitId'.
	 */
	public ExitAdminNoc findWhereExitIdEquals(int exitId) throws ExitAdminNocDaoException;

	/**
	 * Returns all rows from the EXIT_ADMIN_NOC table that match the criteria 'STATUS_ID = :statusId'.
	 */
	public ExitAdminNoc[] findWhereStatusIdEquals(int statusId) throws ExitAdminNocDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the EXIT_ADMIN_NOC table that match the specified arbitrary SQL statement
	 */
	public ExitAdminNoc[] findByDynamicSelect(String sql, Object[] sqlParams) throws ExitAdminNocDaoException;

	/**
	 * Returns all rows from the EXIT_ADMIN_NOC table that match the specified arbitrary SQL statement
	 */
	public ExitAdminNoc[] findByDynamicWhere(String sql, Object[] sqlParams) throws ExitAdminNocDaoException;
}
