/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.ArrayList;
import java.util.List;

import com.dikshatech.beans.PerdiemReportBean;
import com.dikshatech.portal.dto.DepPerdiemReport;
import com.dikshatech.portal.dto.DepPerdiemReportPk;
import com.dikshatech.portal.exceptions.DepPerdiemReportDaoException;
import com.dikshatech.portal.exceptions.DepPerdiemReqDaoException;

public interface DepPerdiemReportDao
{
	/** 
	 * Inserts a new row in the dep_perdiem_report table.
	 */
	public DepPerdiemReportPk insert(DepPerdiemReport dto) throws DepPerdiemReportDaoException;

	/** 
	 * Updates a single row in the dep_perdiem_report table.
	 */
	public void update(DepPerdiemReportPk pk, DepPerdiemReport dto) throws DepPerdiemReportDaoException;

	/** 
	 * Deletes a single row in the dep_perdiem_report table.
	 */
	public void delete(DepPerdiemReportPk pk) throws DepPerdiemReportDaoException;

	/** 
	 * Returns the rows from the dep_perdiem_report table that matches the specified primary-key value.
	 */
	public DepPerdiemReport findByPrimaryKey(DepPerdiemReportPk pk) throws DepPerdiemReportDaoException;

	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'ID = :id'.
	 */
	public DepPerdiemReport findByPrimaryKey(int id) throws DepPerdiemReportDaoException;

	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'DEP_ID = :depId'.
	 */
	public DepPerdiemReport[] findWhereDepIdEquals(int depId) throws DepPerdiemReportDaoException;
	
	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'DEP_ID = :depId' for HDFC. 
	 */
	public DepPerdiemReport[] findWhereDepIdEqualsHdfc(int depId) throws DepPerdiemReportDaoException;
	
	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'DEP_ID = :depId' FOR NON HDFC.
	 */
	public DepPerdiemReport[] findWhereDepIdEqualsNonHdfc(int depId) throws DepPerdiemReportDaoException;

	public DepPerdiemReport[] findWhereDepIdEquals(int depId, int managerId) throws DepPerdiemReportDaoException;
	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'USER_ID = :userId'.
	 */
	public DepPerdiemReport[] findWhereUserIdEquals(int userId) throws DepPerdiemReportDaoException;

	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'MANAGER_ID = :managerId'.
	 */
	public DepPerdiemReport[] findWhereManagerIdEquals(int managerId) throws DepPerdiemReportDaoException;

	/** 
	 * Returns all rows from the dep_perdiem_report table that match the criteria 'IS_DELETED = :isDeleted'.
	 */
	public DepPerdiemReport[] findWhereIsDeletedEquals(short isDeleted) throws DepPerdiemReportDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the dep_perdiem_report table that match the specified arbitrary SQL statement
	 */
	public DepPerdiemReport[] findByDynamicSelect(String sql, Object[] sqlParams) throws DepPerdiemReportDaoException;

	/** 
	 * Returns all rows from the dep_perdiem_report table that match the specified arbitrary SQL statement
	 */
	public DepPerdiemReport[] findByDynamicWhere(String sql, Object[] sqlParams) throws DepPerdiemReportDaoException;

	//public List<String[]> findInternalReportData(int id) throws DepPerdiemReportDaoException;

	public List<String[]> findInternalReportData(int id) throws DepPerdiemReportDaoException;
	public List<String[]> findInternalReportDataHDFC(int id,ArrayList<Integer> arraylist) throws DepPerdiemReportDaoException;
	public List<String[]> findInternalReportDataNONHDFC(int id,ArrayList<Integer> arraylist) throws DepPerdiemReportDaoException;
	
	
	public List<PerdiemReportBean> findBankReport(int id, int flag) throws DepPerdiemReportDaoException;

	public DepPerdiemReport[] findAllPaidAndUnpaid(int depId, String flagBank) throws DepPerdiemReportDaoException ;
	public String updateAllReceivedPay(int depId,ArrayList<Integer> ddp_id,String flag) throws DepPerdiemReportDaoException;
	
	public DepPerdiemReport[] findByUserID(String string, Object[] objects) throws DepPerdiemReqDaoException;

}