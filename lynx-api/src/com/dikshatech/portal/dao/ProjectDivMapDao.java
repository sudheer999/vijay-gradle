/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ProjectDivMapDao
{
	/** 
	 * Inserts a new row in the PROJECT_DIV_MAP table.
	 */
	public ProjectDivMapPk insert(ProjectDivMap dto) throws ProjectDivMapDaoException;

	/** 
	 * Updates a single row in the PROJECT_DIV_MAP table.
	 */
	public void update(ProjectDivMapPk pk, ProjectDivMap dto) throws ProjectDivMapDaoException;

	/** 
	 * Deletes a single row in the PROJECT_DIV_MAP table.
	 */
	public void delete(ProjectDivMapPk pk) throws ProjectDivMapDaoException;

	/** 
	 * Returns the rows from the PROJECT_DIV_MAP table that matches the specified primary-key value.
	 */
	public ProjectDivMap findByPrimaryKey(ProjectDivMapPk pk) throws ProjectDivMapDaoException;

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the criteria 'ID = :id'.
	 */
	public ProjectDivMap findByPrimaryKey(int id) throws ProjectDivMapDaoException;

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the criteria ''.
	 */
	public ProjectDivMap[] findAll() throws ProjectDivMapDaoException;

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the criteria 'ID = :id'.
	 */
	public ProjectDivMap[] findWhereIdEquals(int id) throws ProjectDivMapDaoException;

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the criteria 'PROJ_ID = :projId'.
	 */
	public ProjectDivMap[] findWhereProjIdEquals(int projId) throws ProjectDivMapDaoException;

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the criteria 'DIV_ID = :divId'.
	 */
	public ProjectDivMap[] findWhereDivIdEquals(int divId) throws ProjectDivMapDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the specified arbitrary SQL statement
	 */
	public ProjectDivMap[] findByDynamicSelect(String sql, Object[] sqlParams) throws ProjectDivMapDaoException;

	/** 
	 * Returns all rows from the PROJECT_DIV_MAP table that match the specified arbitrary SQL statement
	 */
	public ProjectDivMap[] findByDynamicWhere(String sql, Object[] sqlParams) throws ProjectDivMapDaoException;

	
}
