/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ProjHistoryDao
{
	/** 
	 * Inserts a new row in the PROJ_HISTORY table.
	 */
	public ProjHistoryPk insert(ProjHistory dto) throws ProjHistoryDaoException;

	/** 
	 * Updates a single row in the PROJ_HISTORY table.
	 */
	public void update(ProjHistoryPk pk, ProjHistory dto) throws ProjHistoryDaoException;

	/** 
	 * Deletes a single row in the PROJ_HISTORY table.
	 */
	public void delete(ProjHistoryPk pk) throws ProjHistoryDaoException;

	/** 
	 * Returns the rows from the PROJ_HISTORY table that matches the specified primary-key value.
	 */
	public ProjHistory findByPrimaryKey(ProjHistoryPk pk) throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the criteria 'ID = :id'.
	 */
	public ProjHistory findByPrimaryKey(int id) throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the criteria ''.
	 */
	public ProjHistory[] findAll() throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the criteria 'ID = :id'.
	 */
	public ProjHistory[] findWhereIdEquals(int id) throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the criteria 'PROJ_ID = :projId'.
	 */
	public ProjHistory[] findWhereProjIdEquals(int projId) throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the criteria 'LAST_MODIFIED_BY = :lastModifiedBy'.
	 */
	public ProjHistory[] findWhereLastModifiedByEquals(int lastModifiedBy) throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the criteria 'MODIFIED_TIME = :modifiedTime'.
	 */
	public ProjHistory[] findWhereModifiedTimeEquals(Date modifiedTime) throws ProjHistoryDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the specified arbitrary SQL statement
	 */
	public ProjHistory[] findByDynamicSelect(String sql, Object[] sqlParams) throws ProjHistoryDaoException;

	/** 
	 * Returns all rows from the PROJ_HISTORY table that match the specified arbitrary SQL statement
	 */
	public ProjHistory[] findByDynamicWhere(String sql, Object[] sqlParams) throws ProjHistoryDaoException;

}
