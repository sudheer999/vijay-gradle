/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Date;
import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface InsuranceHandlerChainReqDao
{
	/** 
	 * Inserts a new row in the INSURANCE_HANDLER_CHAIN_REQ table.
	 */
	public InsuranceHandlerChainReqPk insert(InsuranceHandlerChainReq dto) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Updates a single row in the INSURANCE_HANDLER_CHAIN_REQ table.
	 */
	public void update(InsuranceHandlerChainReqPk pk, InsuranceHandlerChainReq dto) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Deletes a single row in the INSURANCE_HANDLER_CHAIN_REQ table.
	 */
	public void delete(InsuranceHandlerChainReqPk pk) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns the rows from the INSURANCE_HANDLER_CHAIN_REQ table that matches the specified primary-key value.
	 */
	public InsuranceHandlerChainReq findByPrimaryKey(InsuranceHandlerChainReqPk pk) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'ID = :id'.
	 */
	public InsuranceHandlerChainReq findByPrimaryKey(int id) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria ''.
	 */
	public InsuranceHandlerChainReq[] findAll() throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'ID = :id'.
	 */
	public InsuranceHandlerChainReq[] findWhereIdEquals(Integer id) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'ESR_MAP_ID = :esrMapId'.
	 */
	public InsuranceHandlerChainReq[] findWhereEsrMapIdEquals(Integer esrMapId) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'STATUS = :status'.
	 */
	public InsuranceHandlerChainReq[] findWhereStatusEquals(String status) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'RECEIVER_ID = :receiverId'.
	 */
	public InsuranceHandlerChainReq[] findWhereReceiverIdEquals(Integer receiverId) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'ASSIGN_TO = :assignTo'.
	 */
	public InsuranceHandlerChainReq[] findWhereAssignToEquals(Integer assignTo) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'REQUESTER_ID = :requesterId'.
	 */
	public InsuranceHandlerChainReq[] findWhereRequesterIdEquals(Integer requesterId) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'COMMENTS = :comments'.
	 */
	public InsuranceHandlerChainReq[] findWhereCommentsEquals(String comments) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'MESSAGE_BODY = :messageBody'.
	 */
	public InsuranceHandlerChainReq[] findWhereMessageBodyEquals(String messageBody) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'CREATE_DATE = :createDate'.
	 */
	public InsuranceHandlerChainReq[] findWhereCreateDateEquals(Date createDate) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'LAST_MODIFIED_DATE = :lastModifiedDate'.
	 */
	public InsuranceHandlerChainReq[] findWhereLastModifiedDateEquals(Date lastModifiedDate) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the criteria 'POLICY_REQ_ID = :policyReqId'.
	 */
	public InsuranceHandlerChainReq[] findWherePolicyReqIdEquals(Integer policyReqId) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the specified arbitrary SQL statement
	 */
	public InsuranceHandlerChainReq[] findByDynamicSelect(String sql, Object[] sqlParams) throws InsuranceHandlerChainReqDaoException;

	/** 
	 * Returns all rows from the INSURANCE_HANDLER_CHAIN_REQ table that match the specified arbitrary SQL statement
	 */
	public InsuranceHandlerChainReq[] findByDynamicWhere(String sql, Object[] sqlParams) throws InsuranceHandlerChainReqDaoException;

}
