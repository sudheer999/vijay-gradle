/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ServiceRequestDao
{
	/** 
	 * Inserts a new row in the SERVICE_REQUEST table.
	 */
	public ServiceRequestPk insert(ServiceRequest dto) throws ServiceRequestDaoException;

	/** 
	 * Updates a single row in the SERVICE_REQUEST table.
	 */
	public void update(ServiceRequestPk pk, ServiceRequest dto) throws ServiceRequestDaoException;

	/** 
	 * Deletes a single row in the SERVICE_REQUEST table.
	 */
	public void delete(ServiceRequestPk pk) throws ServiceRequestDaoException;

	/** 
	 * Returns the rows from the SERVICE_REQUEST table that matches the specified primary-key value.
	 */
	public ServiceRequest findByPrimaryKey(ServiceRequestPk pk) throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the criteria 'ID = :id'.
	 */
	public ServiceRequest findByPrimaryKey(int id) throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the criteria ''.
	 */
	public ServiceRequest[] findAll() throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the criteria 'ID = :id'.
	 */
	public ServiceRequest[] findWhereIdEquals(int id) throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the criteria 'REQ_NAME = :reqName'.
	 */
	public ServiceRequest[] findWhereReqNameEquals(String reqName) throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the criteria 'ABBREVIATION = :abbreviation'.
	 */
	public ServiceRequest[] findWhereAbbreviationEquals(String abbreviation) throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the criteria 'FEATURE_ID = :featureId'.
	 */
	public ServiceRequest[] findWhereFeatureIdEquals(int featureId) throws ServiceRequestDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the specified arbitrary SQL statement
	 */
	public ServiceRequest[] findByDynamicSelect(String sql, Object[] sqlParams) throws ServiceRequestDaoException;

	/** 
	 * Returns all rows from the SERVICE_REQUEST table that match the specified arbitrary SQL statement
	 */
	public ServiceRequest[] findByDynamicWhere(String sql, Object[] sqlParams) throws ServiceRequestDaoException;

}
