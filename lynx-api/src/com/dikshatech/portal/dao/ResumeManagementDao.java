/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import java.util.Map;

import com.dikshatech.portal.dto.ResumeManagement;
import com.dikshatech.portal.dto.ResumeManagementPk;
import com.dikshatech.portal.exceptions.ResumeManagementDaoException;

public interface ResumeManagementDao {
	/**
	 * Inserts a new row in the RESUME_MANAGEMENT table.
	 */
	public ResumeManagementPk insert(ResumeManagement dto)
			throws ResumeManagementDaoException;

	/**
	 * Updates a single row in the RESUME_MANAGEMENT table.
	 */
	public void update(ResumeManagementPk pk, ResumeManagement dto)
			throws ResumeManagementDaoException;

	/**
	 * Deletes a single row in the RESUME_MANAGEMENT table.
	 */
	public void delete(ResumeManagementPk pk)
			throws ResumeManagementDaoException;

	/**
	 * Returns the rows from the RESUME_MANAGEMENT table that matches the
	 * specified primary-key value.
	 */
	public ResumeManagement findByPrimaryKey(ResumeManagementPk pk)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'ID = :id'.
	 */
	public ResumeManagement findByPrimaryKey(int id)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * ''.
	 */
	public ResumeManagement[] findAll() throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'ID = :id'.
	 */
	public ResumeManagement[] findWhereIdEquals(int id)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'CANDIDATE_FIRST_NAME = :candidateFirstName'.
	 */
	public ResumeManagement[] findWhereCandidateFirstNameEquals(
			String candidateFirstName) throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'CANDIDATE_LAST_NAME = :candidateLastName'.
	 */
	public ResumeManagement[] findWhereCandidateLastNameEquals(
			String candidateLastName) throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'SKILL_SET = :skillSet'.
	 */
	public ResumeManagement[] findWhereSkillSetEquals(String skillSet)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'BILL_RATE = :billRate'.
	 */
	public ResumeManagement[] findWhereBillRateEquals(String billRate)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'PAY_RATE = :payRate'.
	 */
	public ResumeManagement[] findWherePayRateEquals(String payRate)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'CITY = :city'.
	 */
	public ResumeManagement[] findWhereCityEquals(String city)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'STATE = :state'.
	 */
	public ResumeManagement[] findWhereStateEquals(String state)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'RELOCATION = :relocation'.
	 */
	public ResumeManagement[] findWhereRelocationEquals(int relocation)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'SECONDARY_SKILL_SET = :secondarySkillSet'.
	 */
	public ResumeManagement[] findWhereSecondarySkillSetEquals(
			String secondarySkillSet) throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'E_MAILID = :eMailid'.
	 */
	public ResumeManagement[] findWhereEMailidEquals(String eMailid)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'VISA_TYPE = :visaType'.
	 */
	public ResumeManagement[] findWhereVisaTypeEquals(String visaType)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'VT_COMP_NAME = :vtCompName'.
	 */
	public ResumeManagement[] findWhereVtCompNameEquals(String vtCompName)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'VT_CONT_PERSON = :vtContPerson'.
	 */
	public ResumeManagement[] findWhereVtContPersonEquals(String vtContPerson)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'VT_CONT_PHONE = :vtContPhone'.
	 */
	public ResumeManagement[] findWhereVtContPhoneEquals(String vtContPhone)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'VT_EMAIL_ID = :vtEmailId'.
	 */
	public ResumeManagement[] findWhereVtEmailIdEquals(String vtEmailId)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'H_PHONE = :hPhone'.
	 */
	public ResumeManagement[] findWhereHPhoneEquals(String hPhone)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'CELL_NO = :cellNo'.
	 */
	public ResumeManagement[] findWhereCellNoEquals(String cellNo)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'RECRUT_ID = :recrutId'.
	 */
	public ResumeManagement[] findWhereRecrutIdEquals(int recrutId)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'RESUME = :resume'.
	 */
	public ResumeManagement[] findWhereResumeEquals(String resume)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'HOME_PHONE_NUMBER = :homePhoneNumber'.
	 */
	public ResumeManagement[] findWhereHomePhoneNumberEquals(
			String homePhoneNumber) throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'STATUS = :status'.
	 */
	public ResumeManagement[] findWhereStatusEquals(String status)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'IS_DELETE = :isDelete'.
	 */
	public ResumeManagement[] findWhereIsDeleteEquals(int isDelete)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the criteria
	 * 'REGION_ID = :regionId'.
	 */
	public ResumeManagement[] findWhereRegionIdEquals(int regionId)
			throws ResumeManagementDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the
	 * specified arbitrary SQL statement
	 */
	public ResumeManagement[] findByDynamicSelect(String sql, Object[] sqlParams)
			throws ResumeManagementDaoException;

	/**
	 * Returns all rows from the RESUME_MANAGEMENT table that match the
	 * specified arbitrary SQL statement
	 */
	public ResumeManagement[] findByDynamicWhere(String sql, Object[] sqlParams)
			throws ResumeManagementDaoException;

	public Map<Integer,Integer> getIdRecruitIdMap() throws ResumeManagementDaoException;
	
	
}
