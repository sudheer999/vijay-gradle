/*
 * This source file was generated by FireStorm/DAO.
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * For more information please visit http://www.codefutures.com/products/firestorm
 */
package com.dikshatech.portal.dao;

import java.util.HashMap;

import com.dikshatech.portal.dto.AppraisalRatings;
import com.dikshatech.portal.dto.AppraisalRatingsPk;
import com.dikshatech.portal.exceptions.AppraisalRatingsDaoException;

public interface AppraisalRatingsDao {

	/**
	 * Inserts a new row in the APPRAISAL_RATINGS table.
	 */
	public AppraisalRatingsPk insert(AppraisalRatings dto) throws AppraisalRatingsDaoException;

	/**
	 * Updates a single row in the APPRAISAL_RATINGS table.
	 */
	public void update(AppraisalRatingsPk pk, AppraisalRatings dto) throws AppraisalRatingsDaoException;

	/**
	 * Deletes a single row in the APPRAISAL_RATINGS table.
	 */
	public void delete(AppraisalRatingsPk pk) throws AppraisalRatingsDaoException;

	/**
	 * Returns the rows from the APPRAISAL_RATINGS table that matches the specified primary-key value.
	 */
	public AppraisalRatings findByPrimaryKey(AppraisalRatingsPk pk) throws AppraisalRatingsDaoException;

	/**
	 * Returns all rows from the APPRAISAL_RATINGS table that match the criteria 'ID = :id'.
	 */
	public AppraisalRatings findByPrimaryKey(int id) throws AppraisalRatingsDaoException;

	/**
	 * Returns all rows from the APPRAISAL_RATINGS table that match the criteria ''.
	 */
	public AppraisalRatings[] findAll() throws AppraisalRatingsDaoException;

	/**
	 * Returns all rows from the APPRAISAL_RATINGS table that match the criteria 'APPRAISAL_ID = :appraisalId'.
	 */
	public AppraisalRatings[] findWhereAppraisalIdEquals(Integer appraisalId) throws AppraisalRatingsDaoException;

	public HashMap<String, String>[] findAppraisalRatings(Integer appraisalId, boolean isAppraisee) throws AppraisalRatingsDaoException;

	public HashMap<String, String>[] findAllRatings(Integer appraisalId) throws AppraisalRatingsDaoException;
	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/**
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/**
	 * Returns all rows from the APPRAISAL_RATINGS table that match the specified arbitrary SQL statement
	 */
	public AppraisalRatings[] findByDynamicSelect(String sql, Object[] sqlParams) throws AppraisalRatingsDaoException;

	/**
	 * Returns all rows from the APPRAISAL_RATINGS table that match the specified arbitrary SQL statement
	 */
	public AppraisalRatings[] findByDynamicWhere(String sql, Object[] sqlParams) throws AppraisalRatingsDaoException;
}
