/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ReimbursementTypeDao
{
	/** 
	 * Inserts a new row in the REIMBURSEMENT_TYPE table.
	 */
	public ReimbursementTypePk insert(ReimbursementType dto) throws ReimbursementTypeDaoException;

	/** 
	 * Updates a single row in the REIMBURSEMENT_TYPE table.
	 */
	public void update(ReimbursementTypePk pk, ReimbursementType dto) throws ReimbursementTypeDaoException;

	/** 
	 * Deletes a single row in the REIMBURSEMENT_TYPE table.
	 */
	public void delete(ReimbursementTypePk pk) throws ReimbursementTypeDaoException;

	/** 
	 * Returns the rows from the REIMBURSEMENT_TYPE table that matches the specified primary-key value.
	 */
	public ReimbursementType findByPrimaryKey(ReimbursementTypePk pk) throws ReimbursementTypeDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_TYPE table that match the criteria 'ID = :id'.
	 */
	public ReimbursementType findByPrimaryKey(int id) throws ReimbursementTypeDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_TYPE table that match the criteria ''.
	 */
	public ReimbursementType[] findAll() throws ReimbursementTypeDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_TYPE table that match the criteria 'ID = :id'.
	 */
	public ReimbursementType[] findWhereIdEquals(int id) throws ReimbursementTypeDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_TYPE table that match the criteria 'TYPE = :type'.
	 */
	public ReimbursementType[] findWhereTypeEquals(String type) throws ReimbursementTypeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the REIMBURSEMENT_TYPE table that match the specified arbitrary SQL statement
	 */
	public ReimbursementType[] findByDynamicSelect(String sql, Object[] sqlParams) throws ReimbursementTypeDaoException;

	/** 
	 * Returns all rows from the REIMBURSEMENT_TYPE table that match the specified arbitrary SQL statement
	 */
	public ReimbursementType[] findByDynamicWhere(String sql, Object[] sqlParams) throws ReimbursementTypeDaoException;

}
