/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.dikshatech.portal.dao;

import com.dikshatech.portal.dto.*;
import com.dikshatech.portal.exceptions.*;

public interface ModulesDao
{
	/** 
	 * Inserts a new row in the MODULES table.
	 */
	public ModulesPk insert(Modules dto) throws ModulesDaoException;

	/** 
	 * Updates a single row in the MODULES table.
	 */
	public void update(ModulesPk pk, Modules dto) throws ModulesDaoException;

	/** 
	 * Deletes a single row in the MODULES table.
	 */
	public void delete(ModulesPk pk) throws ModulesDaoException;

	/** 
	 * Returns the rows from the MODULES table that matches the specified primary-key value.
	 */
	public Modules findByPrimaryKey(ModulesPk pk) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria 'ID = :id'.
	 */
	public Modules findByPrimaryKey(int id) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria ''.
	 */
	public Modules[] findAll() throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria 'ID = :id'.
	 */
	public Modules[] findWhereIdEquals(int id) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria 'NAME = :name'.
	 */
	public Modules[] findWhereNameEquals(String name) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria 'PARENT_ID = :parentId'.
	 */
	public Modules[] findWhereParentIdEquals(int parentId) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria 'IS_PROC_CHAIN = :isProcChain'.
	 */
	public Modules[] findWhereIsProcChainEquals(int isProcChain) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the criteria 'PERMISSION_TYPES = :permissionTypes'.
	 */
	public Modules[] findWherePermissionTypesEquals(String permissionTypes) throws ModulesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the MODULES table that match the specified arbitrary SQL statement
	 */
	public Modules[] findByDynamicSelect(String sql, Object[] sqlParams) throws ModulesDaoException;

	/** 
	 * Returns all rows from the MODULES table that match the specified arbitrary SQL statement
	 */
	public Modules[] findByDynamicWhere(String sql, Object[] sqlParams) throws ModulesDaoException;

}
